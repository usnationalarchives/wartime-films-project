<?xml version="1.0"?>
<doc>
    <assembly>
        <name>XLabs.Forms.WP8</name>
    </assembly>
    <members>
        <member name="T:XLabs.Forms.Controls.ImageButtonRenderer">
            <summary>
            Draws a button on the Android platform with the image shown in the right 
            position with the right size.
            </summary>
            <summary>
                Draws a button on the Windows Phone platform with the image shown in the right
                position with the right size.
            </summary>
        </member>
        <member name="M:XLabs.Forms.Controls.ImageButtonRenderer.GetHandler(Xamarin.Forms.ImageSource)">
            <summary>
            Returns the proper <see cref="T:Xamarin.Forms.Platform.WinPhone.IImageSourceHandler"/> based on the type of <see cref="T:Xamarin.Forms.ImageSource"/> provided.
            </summary>
            <param name="source">The <see cref="T:Xamarin.Forms.ImageSource"/> to get the handler for.</param>
            <returns>The needed handler.</returns>
        </member>
        <member name="M:XLabs.Forms.Controls.ImageButtonRenderer.GetWidth(System.Int32)">
            <summary>
            Gets the width based on the requested width, if request less than 0, returns 50.
            </summary>
            <param name="requestedWidth">The requested width.</param>
            <returns>The width to use.</returns>
        </member>
        <member name="M:XLabs.Forms.Controls.ImageButtonRenderer.GetHeight(System.Int32)">
            <summary>
            Gets the height based on the requested height, if request less than 0, returns 50.
            </summary>
            <param name="requestedHeight">The requested height.</param>
            <returns>The height to use.</returns>
        </member>
        <member name="F:XLabs.Forms.Controls.ImageButtonRenderer._currentImage">
            <summary>
                The image displayed in the button.
            </summary>
        </member>
        <member name="M:XLabs.Forms.Controls.ImageButtonRenderer.OnElementChanged(Xamarin.Forms.Platform.WinPhone.ElementChangedEventArgs{Xamarin.Forms.Button})">
            <summary>
                Handles the initial drawing of the button.
            </summary>
            <param name="e">Information on the <see cref="T:XLabs.Forms.Controls.ImageButton"/>.</param>
        </member>
        <member name="M:XLabs.Forms.Controls.ImageButtonRenderer.OnElementPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
                Called when the underlying model's properties are changed.
            </summary>
            <param name="sender">Model sending the change event.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:XLabs.Forms.Controls.ImageButtonRenderer.GetTextAlignment(XLabs.Enums.ImageOrientation)">
            <summary>
                Returns the alignment of the label on the button depending on the orientation.
            </summary>
            <param name="imageOrientation">The orientation to use.</param>
            <returns>The alignment to use for the text.</returns>
        </member>
        <member name="M:XLabs.Forms.Controls.ImageButtonRenderer.GetImageAsync(Xamarin.Forms.ImageSource,System.Int32,System.Int32,System.Windows.Controls.Image)">
            <summary>
            Returns a <see cref="T:Xamarin.Forms.Image"/> from the <see cref="T:Xamarin.Forms.ImageSource"/> provided.
            </summary>
            <param name="source">The <see cref="T:Xamarin.Forms.ImageSource"/> to load the image from.</param>
            <param name="height">The height for the image (divides by 2 for the Windows Phone platform).</param>
            <param name="width">The width for the image (divides by 2 for the Windows Phone platform).</param>
            <param name="currentImage">The current image.</param>
            <returns>A properly sized image.</returns>
        </member>
        <member name="M:XLabs.Forms.Controls.ImageButtonRenderer.SetImageMargin(System.Windows.Controls.Image,XLabs.Enums.ImageOrientation)">
            <summary>
                Sets a margin of 10 between the image and the text.
            </summary>
            <param name="image">The image to add a margin to.</param>
            <param name="orientation">The orientation of the image on the button.</param>
        </member>
        <member name="T:XLabs.Forms.Services.FontManager">
            <summary>
            Class FontManager.
            </summary>
            <summary>
            Class FontManager.
            </summary>
        </member>
        <member name="M:XLabs.Forms.Services.FontManager.FindClosest(System.String,System.Double)">
            <summary>
            Finds the closest.
            </summary>
            <param name="name">The name.</param>
            <param name="desiredHeight">Height of the desired.</param>
            <returns>Font.</returns>
        </member>
        <member name="F:XLabs.Forms.Services.FontManager.display">
            <summary>
            The _display
            </summary>
        </member>
        <member name="M:XLabs.Forms.Services.FontManager.#ctor(XLabs.Platform.Device.IDisplay)">
            <summary>
            Initializes a new instance of the <see cref="T:XLabs.Forms.Services.FontManager"/> class.
            </summary>
            <param name="display">The display.</param>
        </member>
        <member name="M:XLabs.Forms.Services.FontManager.GetHeight(Xamarin.Forms.Font)">
            <summary>
            Gets height for the font.
            </summary>
            <param name="font">Font whose height is calculated.</param>
            <returns>Height of the font in inches.</returns>
        </member>
        <member name="P:XLabs.Forms.Services.FontManager.AvailableFonts">
            <summary>
            Gets all available system fonts.
            </summary>
            <value>The available fonts.</value>
        </member>
        <member name="T:XLabs.Forms.Controls.CalendarViewRenderer">
            <summary>
            Class CalendarViewRenderer.
            </summary>
        </member>
        <member name="M:XLabs.Forms.Controls.CalendarViewRenderer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XLabs.Forms.Controls.CalendarViewRenderer"/> class.
            </summary>
        </member>
        <member name="M:XLabs.Forms.Controls.CalendarViewRenderer.OnElementChanged(Xamarin.Forms.Platform.WinPhone.ElementChangedEventArgs{XLabs.Forms.Controls.CalendarView})">
            <summary>
            Called when [element changed].
            </summary>
            <param name="e">The e.</param>
        </member>
        <member name="T:XLabs.Forms.Controls.CameraViewRenderer">
            <summary>
            Class CameraViewRenderer.
            </summary>
        </member>
        <member name="M:XLabs.Forms.Controls.CameraViewRenderer.OnElementChanged(Xamarin.Forms.Platform.WinPhone.ElementChangedEventArgs{XLabs.Forms.Controls.CameraView})">
            <summary>
            Called when [element changed].
            </summary>
            <param name="e">The e.</param>
        </member>
        <member name="M:XLabs.Forms.Controls.CameraViewRenderer.OnElementPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Handles the <see cref="E:ElementPropertyChanged"/> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:XLabs.Forms.Controls.CheckBoxRenderer">
            <summary>
            Class CheckBoxRenderer.
            </summary>
        </member>
        <member name="M:XLabs.Forms.Controls.CheckBoxRenderer.OnElementChanged(Xamarin.Forms.Platform.WinPhone.ElementChangedEventArgs{XLabs.Forms.Controls.CheckBox})">
            <summary>
            Called when [element changed].
            </summary>
            <param name="e">The e.</param>
        </member>
        <member name="M:XLabs.Forms.Controls.CheckBoxRenderer.CheckedChanged(System.Object,XLabs.EventArgs{System.Boolean})">
            <summary>
            Checkeds the changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="eventArgs">The event arguments.</param>
        </member>
        <member name="M:XLabs.Forms.Controls.CheckBoxRenderer.UpdateFont">
            <summary>
            Updates the font.
            </summary>
        </member>
        <member name="T:XLabs.Forms.Controls.CircleImageRenderer">
            <summary>
            Class CircleImageRenderer.
            </summary>
        </member>
        <member name="M:XLabs.Forms.Controls.CircleImageRenderer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XLabs.Forms.Controls.CircleImageRenderer"/> class.
            </summary>
        </member>
        <member name="M:XLabs.Forms.Controls.CircleImageRenderer.OnElementChanged(Xamarin.Forms.Platform.WinPhone.ElementChangedEventArgs{Xamarin.Forms.Image})">
            <summary>
            Called when [element changed].
            </summary>
            <param name="e">The e.</param>
        </member>
        <member name="M:XLabs.Forms.Controls.CircleImageRenderer.OnElementPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Handles the <see cref="E:ElementPropertyChanged"/> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:XLabs.Forms.Controls.DragContentViewRenderer">
            <summary>
            Class DragContentViewRenderer.
            </summary>
        </member>
        <member name="M:XLabs.Forms.Controls.DragContentViewRenderer.OnElementChanged(Xamarin.Forms.Platform.WinPhone.ElementChangedEventArgs{XLabs.Forms.Controls.DragContentView})">
            <summary>
            Called when [element changed].
            </summary>
            <param name="e">The e.</param>
        </member>
        <member name="T:XLabs.Forms.Controls.DynamicListViewRenderer`1">
            <summary>
            Class DynamicListViewRenderer.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:XLabs.Forms.Controls.DynamicListViewRenderer`1.XAML">
            <summary>
            The xaml
            </summary>
        </member>
        <member name="F:XLabs.Forms.Controls.DynamicListViewRenderer`1._tableView">
            <summary>
            The _table view
            </summary>
        </member>
        <member name="M:XLabs.Forms.Controls.DynamicListViewRenderer`1.OnElementChanged(Xamarin.Forms.Platform.WinPhone.ElementChangedEventArgs{XLabs.Forms.Controls.DynamicListView{`0}})">
            <summary>
            Called when [element changed].
            </summary>
            <param name="e">The e.</param>
        </member>
        <member name="M:XLabs.Forms.Controls.DynamicListViewRenderer`1.TemplateForItem(System.Object)">
            <summary>
            Templates for item.
            </summary>
            <param name="item">The item.</param>
            <returns>System.Windows.DataTemplate.</returns>
        </member>
        <member name="M:XLabs.Forms.Controls.DynamicListViewRenderer`1.Unbind(XLabs.Forms.Controls.DynamicListView{`0})">
            <summary>
            Unbinds the specified old element.
            </summary>
            <param name="oldElement">The old element.</param>
        </member>
        <member name="M:XLabs.Forms.Controls.DynamicListViewRenderer`1.Bind(XLabs.Forms.Controls.DynamicListView{`0})">
            <summary>
            Binds the specified new element.
            </summary>
            <param name="newElement">The new element.</param>
        </member>
        <member name="M:XLabs.Forms.Controls.DynamicListViewRenderer`1.ElementPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Elements the property changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:XLabs.Forms.Controls.DynamicListViewRenderer`1.Template">
            <summary>
            Gets the template.
            </summary>
            <value>The template.</value>
        </member>
        <member name="T:XLabs.Forms.Controls.DynamicListViewRenderer`1.DataSource">
            <summary>
            Class DataSource.
            </summary>
        </member>
        <member name="F:XLabs.Forms.Controls.DynamicListViewRenderer`1.DataSource._parent">
            <summary>
            The _parent
            </summary>
        </member>
        <member name="M:XLabs.Forms.Controls.DynamicListViewRenderer`1.DataSource.#ctor(XLabs.Forms.Controls.DynamicListViewRenderer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:XLabs.Forms.Controls.DynamicListViewRenderer`1.DataSource"/> class.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:XLabs.Forms.Controls.DynamicListViewRenderer`1.DataSource.OnContentChanged(System.Object,System.Object)">
            <summary>
            Called when the value of the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property changes.
            </summary>
            <param name="oldContent">The old value of the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property.</param>
            <param name="newContent">The new value of the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property.</param>
        </member>
        <member name="T:XLabs.Forms.Controls.DynamicListViewRenderer`1.MyDataTemplate">
            <summary>
            Class MyDataTemplate.
            </summary>
        </member>
        <member name="T:XLabs.Forms.Controls.ExtendedButtonRenderer">
            <summary>
            Class ExtendedButtonRenderer.
            </summary>
        </member>
        <member name="M:XLabs.Forms.Controls.ExtendedButtonRenderer.OnElementChanged(Xamarin.Forms.Platform.WinPhone.ElementChangedEventArgs{Xamarin.Forms.Button})">
            <summary>
            Called when [element changed].
            </summary>
            <param name="e">The e.</param>
        </member>
        <member name="M:XLabs.Forms.Controls.ExtendedButtonRenderer.OnElementPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Handles the <see cref="E:ElementPropertyChanged"/> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:XLabs.Forms.Controls.ExtendedButtonRenderer.Element">
            <summary>
            Gets the element.
            </summary>
            <value>The element.</value>
        </member>
        <member name="T:XLabs.Forms.Controls.ExtendedEntryRenderer">
            <summary>
            Class ExtendedEntryRenderer.
            </summary>
        </member>
        <member name="F:XLabs.Forms.Controls.ExtendedEntryRenderer._thisPasswordBox">
            <summary>
            The _this password box
            </summary>
        </member>
        <member name="F:XLabs.Forms.Controls.ExtendedEntryRenderer._thisPhoneTextBox">
            <summary>
            The _this phone text box
            </summary>
        </member>
        <member name="M:XLabs.Forms.Controls.ExtendedEntryRenderer.OnElementChanged(Xamarin.Forms.Platform.WinPhone.ElementChangedEventArgs{Xamarin.Forms.Entry})">
            <summary>
            Called when [element changed].
            </summary>
            <param name="e">The e.</param>
        </member>
        <member name="M:XLabs.Forms.Controls.ExtendedEntryRenderer.OnElementPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Handles the <see cref="E:ElementPropertyChanged"/> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:XLabs.Forms.Controls.ExtendedEntryRenderer.SetBorder(XLabs.Forms.Controls.ExtendedEntry)">
            <summary>
            Sets the border.
            </summary>
            <param name="view">The view.</param>
        </member>
        <member name="M:XLabs.Forms.Controls.ExtendedEntryRenderer.SetTextAlignment(XLabs.Forms.Controls.ExtendedEntry)">
            <summary>
            Sets the text alignment.
            </summary>
            <param name="view">The view.</param>
        </member>
        <member name="M:XLabs.Forms.Controls.ExtendedEntryRenderer.SetFont(XLabs.Forms.Controls.ExtendedEntry)">
            <summary>
            Sets the font.
            </summary>
            <param name="view">The view.</param>
        </member>
        <member name="M:XLabs.Forms.Controls.ExtendedEntryRenderer.SetPlaceholderTextColor(XLabs.Forms.Controls.ExtendedEntry)">
            <summary>
            Sets the color of the placeholder text.
            </summary>
            <param name="view">The view.</param>
        </member>
        <member name="M:XLabs.Forms.Controls.ExtendedEntryRenderer.SetMaxLength(XLabs.Forms.Controls.ExtendedEntry)">
            <summary>
            Sets the MaxLength Characters.
            </summary>
            <param name="view">The view.</param>
        </member>
        <member name="T:XLabs.Forms.Controls.ExtendedLabelRenderer">
            <summary>
            The extended label renderer.
            </summary>
        </member>
        <member name="M:XLabs.Forms.Controls.ExtendedLabelRenderer.OnElementChanged(Xamarin.Forms.Platform.WinPhone.ElementChangedEventArgs{Xamarin.Forms.Label})">
            <summary>
            The on element changed callback.
            </summary>
            <param name="e">
            The event arguments.
            </param>
        </member>
        <member name="M:XLabs.Forms.Controls.ExtendedLabelRenderer.UpdateUi(XLabs.Forms.Controls.ExtendedLabel,System.Windows.Controls.TextBlock)">
            <summary>
            Updates the UI.
            </summary>
            <param name="view">
            The view.
            </param>
            <param name="control">
            The control.
            </param>
        </member>
        <member name="M:XLabs.Forms.Controls.ExtendedLabelRenderer.LocalFontFileExists(System.String)">
            <summary>
            Checks if a local resource font file exists
            </summary>
            <param name="filename">the filename including extension, but not path</param>
            <returns></returns>
        </member>
        <member name="T:XLabs.Forms.Controls.ExtendedScrollViewRenderer">
            <summary>
            Class ExtendedScrollViewRenderer.
            </summary>
        </member>
        <member name="M:XLabs.Forms.Controls.ExtendedScrollViewRenderer.OnElementChanged(Xamarin.Forms.Platform.WinPhone.ElementChangedEventArgs{Xamarin.Forms.ScrollView})">
            <summary>
            Called when [element changed].
            </summary>
            <param name="e">The e.</param>
        </member>
        <member name="F:XLabs.Forms.Controls.ExtendedScrollViewRenderer._epsilon">
            <summary>
            The _epsilon
            </summary>
        </member>
        <member name="M:XLabs.Forms.Controls.ExtendedScrollViewRenderer.OnElementPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Handles the <see cref="E:ElementPropertyChanged"/> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:XLabs.Forms.Controls.ExtendedSwitchRenderer">
            <summary>
            Class ExtendedSwitchRenderer.
            </summary>
        </member>
        <member name="F:XLabs.Forms.Controls.ExtendedSwitchRenderer._toggleSwitch">
            <summary>
            The _toggle switch
            </summary>
        </member>
        <member name="M:XLabs.Forms.Controls.ExtendedSwitchRenderer.OnElementChanged(Xamarin.Forms.Platform.WinPhone.ElementChangedEventArgs{XLabs.Forms.Controls.ExtendedSwitch})">
            <summary>
            Called when [element changed].
            </summary>
            <param name="e">The e.</param>
        </member>
        <member name="M:XLabs.Forms.Controls.ExtendedSwitchRenderer.UpdateNativeWidget">
            <summary>
            Updates the native widget.
            </summary>
        </member>
        <member name="M:XLabs.Forms.Controls.ExtendedSwitchRenderer.OnElementPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Handles the <see cref="E:ElementPropertyChanged"/> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:XLabs.Forms.Controls.ExtendedSwitchRenderer.SetTintColor(Xamarin.Forms.Color)">
            <summary>
            Sets the color of the tint.
            </summary>
            <param name="color">The color.</param>
        </member>
        <member name="M:XLabs.Forms.Controls.ExtendedSwitchRenderer.ElementToggled(System.Object,Xamarin.Forms.ToggledEventArgs)">
            <summary>
            Elements the toggled.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Xamarin.Forms.ToggledEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:XLabs.Forms.Controls.ExtendedSwitchRenderer.ControlValueChanged(System.Object,System.EventArgs)">
            <summary>
            Controls the value changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:XLabs.Forms.Controls.ExtendedTextCellRenderer">
            <summary>
            Class ExtendedTextCellRenderer.
            </summary>
        </member>
        <member name="T:XLabs.Forms.Controls.HybridWebViewRenderer">
            <summary>
            The hybrid web view renderer.
            </summary>
        </member>
        <member name="M:XLabs.Forms.Controls.HybridWebViewRenderer.OnElementChanged(Xamarin.Forms.Platform.WinPhone.ElementChangedEventArgs{XLabs.Forms.Controls.HybridWebView})">
            <summary>
                Called when [element changed].
            </summary>
            <param name="e">The e.</param>
        </member>
        <member name="M:XLabs.Forms.Controls.HybridWebViewRenderer.WebViewOnScriptNotify(System.Object,Microsoft.Phone.Controls.NotifyEventArgs)">
            <summary>
                Webs the view on script notify.
            </summary>
            <param name="sender">The sender.</param>
            <param name="notifyEventArgs">The <see cref="T:Microsoft.Phone.Controls.NotifyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:XLabs.Forms.Controls.HybridWebViewRenderer.WebViewLoadCompleted(System.Object,System.Windows.Navigation.NavigationEventArgs)">
            <summary>
                Webs the view load completed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Navigation.NavigationEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:XLabs.Forms.Controls.HybridWebViewRenderer.LoadContent(System.Object,XLabs.Forms.Controls.HybridWebView.LoadContentEventArgs)">
            <summary>
                Loads the content.
            </summary>
            <param name="sender">The sender.</param>
            <param name="contentFullName">Full name of the content.</param>
        </member>
        <member name="M:XLabs.Forms.Controls.HybridWebViewRenderer.WebViewNavigating(System.Object,Microsoft.Phone.Controls.NavigatingEventArgs)">
            <summary>
            Handles navigation started events.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Microsoft.Phone.Controls.NavigatingEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:XLabs.Forms.Controls.HybridWebViewRenderer.Inject(System.String)">
            <summary>
                Injects the specified script.
            </summary>
            <param name="script">The script.</param>
        </member>
        <member name="M:XLabs.Forms.Controls.HybridWebViewRenderer.Load(System.Uri)">
            <summary>
                Loads the specified URI.
            </summary>
            <param name="uri">The URI.</param>
        </member>
        <member name="M:XLabs.Forms.Controls.HybridWebViewRenderer.LoadFromContent(System.Object,XLabs.Forms.Controls.HybridWebView.LoadContentEventArgs)">
            <summary>
                Loads from content.
            </summary>
            <param name="sender">The sender.</param>
            <param name="contentFullName">Full name of the content.</param>
        </member>
        <member name="M:XLabs.Forms.Controls.HybridWebViewRenderer.LoadFromString(System.String)">
            <summary>
                Loads from string.
            </summary>
            <param name="html">The HTML.</param>
        </member>
        <member name="M:XLabs.Forms.Controls.HybridWebViewRenderer.OnElementPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Handles the <see cref="E:ElementPropertyChanged"/> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:XLabs.Forms.Controls.HyperLinkLabelRenderer">
            <summary>
            Class HyperLinkLabelRenderer.
            </summary>
        </member>
        <member name="F:XLabs.Forms.Controls.HyperLinkLabelRenderer._fontApplied">
            <summary>
            The _font applied
            </summary>
        </member>
        <member name="M:XLabs.Forms.Controls.HyperLinkLabelRenderer.OnElementChanged(Xamarin.Forms.Platform.WinPhone.ElementChangedEventArgs{XLabs.Forms.Controls.HyperLinkLabel})">
            <summary>
            Called when [element changed].
            </summary>
            <param name="e">The e.</param>
        </member>
        <member name="M:XLabs.Forms.Controls.HyperLinkLabelRenderer.OnElementPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Handles the <see cref="E:ElementPropertyChanged"/> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:XLabs.Forms.Controls.HyperLinkLabelRenderer.UpdateBackground">
            <summary>
            Updates the background.
            </summary>
        </member>
        <member name="M:XLabs.Forms.Controls.HyperLinkLabelRenderer.UpdateContent">
            <summary>
            Updates the content.
            </summary>
        </member>
        <member name="M:XLabs.Forms.Controls.HyperLinkLabelRenderer.UpdateFont">
            <summary>
            Updates the font.
            </summary>
        </member>
        <member name="M:XLabs.Forms.Controls.HyperLinkLabelRenderer.UpdateTextColor">
            <summary>
            Updates the color of the text.
            </summary>
        </member>
        <member name="T:XLabs.Forms.Controls.RadioButtonRenderer">
            <summary>
            Class RadioButtonRenderer.
            </summary>
        </member>
        <member name="M:XLabs.Forms.Controls.RadioButtonRenderer.OnElementChanged(Xamarin.Forms.Platform.WinPhone.ElementChangedEventArgs{XLabs.Forms.Controls.CustomRadioButton})">
            <summary>
            Called when [element changed].
            </summary>
            <param name="e">The e.</param>
        </member>
        <member name="M:XLabs.Forms.Controls.RadioButtonRenderer.UpdateText">
            <summary>
            Updates radio button text content.
            </summary>
        </member>
        <member name="M:XLabs.Forms.Controls.RadioButtonRenderer.UpdateFont">
            <summary>
            Updates the font.
            </summary>
        </member>
        <member name="T:XLabs.Forms.Controls.SensorBarControl">
            <summary>
            Class SensorBarControl.
            </summary>
        </member>
        <member name="F:XLabs.Forms.Controls.SensorBarControl._positiveColor">
            <summary>
            The positive color
            </summary>
        </member>
        <member name="F:XLabs.Forms.Controls.SensorBarControl._negativeColor">
            <summary>
            The negative color
            </summary>
        </member>
        <member name="F:XLabs.Forms.Controls.SensorBarControl._limit">
            <summary>
            The limit
            </summary>
        </member>
        <member name="F:XLabs.Forms.Controls.SensorBarControl._currentValue">
            <summary>
            The current value
            </summary>
        </member>
        <member name="M:XLabs.Forms.Controls.SensorBarControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XLabs.Forms.Controls.SensorBarControl"/> class.
            </summary>
        </member>
        <member name="M:XLabs.Forms.Controls.SensorBarControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:XLabs.Forms.Controls.SensorBarControl.CurrentValue">
            <summary>
            Gets or sets the current value.
            </summary>
            <value>The current value.</value>
        </member>
        <member name="P:XLabs.Forms.Controls.SensorBarControl.Limit">
            <summary>
            Gets or sets the limit.
            </summary>
            <value>The limit.</value>
        </member>
        <member name="P:XLabs.Forms.Controls.SensorBarControl.PositiveColor">
            <summary>
            Gets or sets the color of the positive.
            </summary>
            <value>The color of the positive.</value>
        </member>
        <member name="P:XLabs.Forms.Controls.SensorBarControl.NegativeColor">
            <summary>
            Gets or sets the color of the negative.
            </summary>
            <value>The color of the negative.</value>
        </member>
        <member name="T:XLabs.Forms.Controls.SeparatorRenderer">
            <summary>
            Class SeparatorRenderer.
            </summary>
        </member>
        <member name="M:XLabs.Forms.Controls.SeparatorRenderer.OnElementChanged(Xamarin.Forms.Platform.WinPhone.ElementChangedEventArgs{XLabs.Forms.Controls.Separator})">
            <summary>
            Called when [element changed].
            </summary>
            <param name="e">The e.</param>
        </member>
        <member name="M:XLabs.Forms.Controls.SeparatorRenderer.OnElementPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Handles the <see cref="E:ElementPropertyChanged"/> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:XLabs.Forms.Controls.SeparatorRenderer.SetProperties(System.Windows.Shapes.Path)">
            <summary>
            Sets the properties.
            </summary>
            <param name="line">The line.</param>
        </member>
        <member name="T:XLabs.Forms.Controls.WebImageRenderer">
            <summary>
            Class WebImageRenderer.
            </summary>
        </member>
        <member name="M:XLabs.Forms.Controls.WebImageRenderer.OnElementChanged(Xamarin.Forms.Platform.WinPhone.ElementChangedEventArgs{Xamarin.Forms.Image})">
            <summary>
            Called when [element changed].
            </summary>
            <param name="e">The e.</param>
        </member>
        <member name="M:XLabs.Forms.Controls.WebImageRenderer.GetImageFromWeb(System.String)">
            <summary>
            Gets the image from web.
            </summary>
            <param name="url">The URL.</param>
            <returns>System.Windows.Controls.Image.</returns>
        </member>
        <member name="T:XLabs.Forms.AlignmentExtensions">
            <summary>
            Class AlignmentExtensions.
            </summary>
        </member>
        <member name="M:XLabs.Forms.AlignmentExtensions.ToContentVerticalAlignment(Xamarin.Forms.TextAlignment)">
            <summary>
            To the content vertical alignment.
            </summary>
            <param name="alignment">The alignment.</param>
            <returns>VerticalAlignment.</returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:XLabs.Forms.AlignmentExtensions.ToContentHorizontalAlignment(Xamarin.Forms.TextAlignment)">
            <summary>
            To the content horizontal alignment.
            </summary>
            <param name="alignment">The alignment.</param>
            <returns>HorizontalAlignment.</returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="T:XLabs.Forms.ColorExtensions">
            <summary>
            Class ColorExtensions.
            </summary>
        </member>
        <member name="M:XLabs.Forms.ColorExtensions.ToBrush(Xamarin.Forms.Color)">
            <summary>
            To the brush.
            </summary>
            <param name="color">The color.</param>
            <returns>Brush.</returns>
        </member>
        <member name="M:XLabs.Forms.ColorExtensions.ToMediaColor(Xamarin.Forms.Color)">
            <summary>
            To the color of the media.
            </summary>
            <param name="color">The color.</param>
            <returns>System.Windows.Media.Color.</returns>
        </member>
        <member name="T:XLabs.Forms.Extensions.FontExtensions">
            <summary>
            Class FontExtensions.
            </summary>
        </member>
        <member name="M:XLabs.Forms.Extensions.FontExtensions.GetHeight(Xamarin.Forms.Font)">
            <summary>
            Gets the height.
            </summary>
            <param name="font">The font.</param>
            <returns>System.Double.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:XLabs.Forms.Extensions.FontExtensions.GetFontFamily(Xamarin.Forms.Font)">
            <summary>
            Gets the font family.
            </summary>
            <param name="font">The font.</param>
            <returns>FontFamily.</returns>
        </member>
        <member name="T:XLabs.Forms.Extensions.PageExtensions">
            <summary>
            Class PageExtensions.
            </summary>
        </member>
        <member name="M:XLabs.Forms.Extensions.PageExtensions.SetOrientation(Microsoft.Phone.Controls.PhoneApplicationPage,System.Nullable{Microsoft.Phone.Controls.PageOrientation})">
            <summary>
            Sets the orientation.
            </summary>
            <param name="page">The page.</param>
            <param name="orientation">The orientation.</param>
        </member>
        <member name="T:XLabs.Forms.Pages.ExtendedMasterDetailRenderer">
            <summary>
            Class ExtendedMasterDetailRenderer.
            </summary>
        </member>
        <member name="T:XLabs.Forms.XFormsAppWP">
            <summary>
                The XLabs Windows Phone Application.
            </summary>
        </member>
        <member name="M:XLabs.Forms.XFormsAppWP.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:XLabs.Forms.XFormsAppWP"/> class.
            </summary>
        </member>
        <member name="M:XLabs.Forms.XFormsAppWP.#ctor(System.Windows.Application)">
            <summary>
                Initializes a new instance of the <see cref="T:XLabs.Forms.XFormsAppWP"/> class.
            </summary>
            <param name="application">The application.</param>
        </member>
        <member name="M:XLabs.Forms.XFormsAppWP.RaiseBackPress">
            <summary>
                Raises the back press.
            </summary>
        </member>
        <member name="M:XLabs.Forms.XFormsAppWP.SetOrientation(Microsoft.Phone.Controls.PageOrientation)">
            <summary>
                Sets the orientation.
            </summary>
            <param name="orientation">The orientation.</param>
        </member>
        <member name="M:XLabs.Forms.XFormsAppWP.OnInit(System.Windows.Application,System.Boolean)">
            <summary>
                Initializes the specified context.
            </summary>
            <param name="app">The native application.</param>
            <param name="initServices">Should initialize services.</param>
        </member>
    </members>
</doc>
